/*
Deployment script for HotelDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HotelDB"
:setvar DefaultFilePrefix "HotelDB"
:setvar DefaultDataPath "C:\Users\Andrew\AppData\Local\Microsoft\VisualStudio\SSDT\HotelApp"
:setvar DefaultLogPath "C:\Users\Andrew\AppData\Local\Microsoft\VisualStudio\SSDT\HotelApp"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Procedure [dbo].[spBookings_Insert]...';


GO
CREATE PROCEDURE [dbo].[spBookings_Insert]
	@roomId int,
	@guestId int,
	@startDate date,
	@endDate date,
	@totalCost money
AS
begin
	set nocount on;
	
	insert into dbo.Bookings (RoomId, GuestId, StartDate, EndDate, TotalCost)
	values (@roomId, @guestId, @startDate, @endDate, @totalCost);
end
GO
PRINT N'Creating Procedure [dbo].[spGuests_Insert]...';


GO
CREATE PROCEDURE [dbo].[spGuests_Insert]
	@firstName nvarchar(50),
	@lastName nvarchar(50)
AS
begin
	set nocount on;
	
	-- If the person does not exist then insert into the database
	if not exists (select 1 from dbo.Guests where FirstName = @firstName and LastName=@lastName)
	begin
		insert into dbo.Guests(FirstName,LastName)
		values(@firstName,@lastName)
	end
	
	-- We use 'top 1' to ensure that we only get one row back
	select top 1 [Id], [FirstName], [LastName]
	from dbo.Guests
	where FirstName = @firstName and LastName=@lastName
end
GO
PRINT N'Creating Procedure [dbo].[spRooms_GetAvailableRooms]...';


GO
CREATE PROCEDURE [dbo].[spRooms_GetAvailableRooms]
	@startDate date,
	@endDate date,
	@roomTypeId int
AS
begin
	set nocount on;

	select r.*
	from dbo.Rooms r
	inner join dbo.RoomTypes t on t.Id=r.RoomTypeId
	where r.RoomTypeId = @roomTypeId
	and r.Id not in (
	select b.RoomId
	from dbo.Bookings b
	where (@startDate < b.StartDate and @endDate > b.EndDate)
	or (b.StartDate <= @endDate and @endDate < b.EndDate)
	or (b.StartDate <= @startDate and @startDate < b.EndDate)
	);

end
GO
PRINT N'Creating Procedure [dbo].[spRoomTypes_GetAvailableTypes]...';


GO
CREATE PROCEDURE [dbo].[spRoomTypes_GetAvailableTypes]
	@startDate date,
	@endDate date
AS
begin
	set nocount on;

	select t.Id, t.Title, t.Description, t.Price
	from dbo.Rooms r
	inner join dbo.RoomTypes t on t.Id=r.RoomTypeId
	where r.Id not in (
	select b.RoomId
	from dbo.Bookings b
	where (@startDate < b.StartDate and @endDate > b.EndDate)
	or (b.StartDate <= @endDate and @endDate < b.EndDate)
	or (b.StartDate <= @startDate and @startDate < b.EndDate)
	)
	group by t.Id, t.Title, t.Description, t.Price;
	
end
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


-- If there are no record in the db then insert the default data
if not exists(select 1 from dbo.RoomTypes)
begin
    insert into dbo.RoomTypes(Title,Description,Price)
	values('King Size Bed','A room with a king size bed',100.00),
	('Queen Size Bed','A room with a queen size bed',75.00),
	('Double Bed','A room with two double beds',50.00),
	('Single Bed','A room with a single bed',25.00);
end

-- If there are no record in the db then insert the default data
if not exists(select 1 from dbo.Rooms)
begin
	declare @roomId1 int;
	declare @roomId2 int;
	declare @roomId3 int;
	declare @roomId4 int;

	-- We insert the Id into a variable so we can use it in the next insert statement
	select @roomId1 = Id from dbo.RoomTypes where title = 'King Size Bed';
	select @roomId2 = Id from dbo.RoomTypes where title = 'Queen Size Bed';
	select @roomId3 = Id from dbo.RoomTypes where title = 'Double Bed';
	select @roomId4 = Id from dbo.RoomTypes where title = 'Single Bed';

	insert into dbo.Rooms(RoomNumber, RoomTypeId)
	values(101, @roomId1),
	(102, @roomId2),
	(103, @roomId3),
	(104, @roomId4),
	(201, @roomId1),
	(202, @roomId2),
	(203, @roomId3),
	(204, @roomId4),
	(301, @roomId1),
	(302, @roomId2),
	(303, @roomId3),
	(304, @roomId4),
	(401, @roomId1),
	(402, @roomId2),
	(403, @roomId3),
	(404, @roomId4);	
end
GO

GO
PRINT N'Update complete.';


GO
